[{"/home/elbatouri/covid-blockchain/covid-chain/src/index.js":"1","/home/elbatouri/covid-blockchain/covid-chain/src/App.js":"2","/home/elbatouri/covid-blockchain/covid-chain/src/reportWebVitals.js":"3"},{"size":500,"mtime":1637811429489,"results":"4","hashOfConfig":"5"},{"size":6618,"mtime":1637827031836,"results":"6","hashOfConfig":"5"},{"size":362,"mtime":1637811429489,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"mnp69m",{"filePath":"11","messages":"12","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"13"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"/home/elbatouri/covid-blockchain/covid-chain/src/index.js",[],["16","17"],"/home/elbatouri/covid-blockchain/covid-chain/src/App.js",["18","19","20","21","22"],"import React, {useState, useRef} from 'react';\nimport {Container, Card, CardContent, makeStyles, Grid, TextField, Button, responsiveFontSizes} from '@material-ui/core';\nimport QRCode from 'qrcode';\nimport QrReader from 'react-qr-reader';\nimport { withThemeCreator } from '@material-ui/styles';\n\n\nfunction App() { \n  const [text, setText] = useState('');\n  const [imageUrl, setImageUrl] = useState('');\n  const [scanResultFile, setScanResultFile] = useState('');\n  const [scanResultWebCam, setScanResultWebCam] =  useState('');\n  const classes = useStyles();\n  const qrRef = useRef(null);\n  const [status, setStatus] = useState(\"\");\n  const [status_live, setStatus_live] = useState(\"\");\n  \n  \n  const generateQrCode = async () => {\n    try {\n          const response = await QRCode.toDataURL(text);\n          setImageUrl(response);\n    }catch (error) {\n      console.log(error);\n    }\n  }\n  const handleErrorFile = (error) => {\n    console.log(error);\n  }\n  const handleScanFile = (result) => {\n      if (result) {\n      scanForPass(result);\n      }else{\n        setStatus(\"Not a QR Code\");\n      }\n  }\n  const onScanFile = () => {\n    qrRef.current.openImageDialog();\n  }\n  const handleErrorWebCam = (error) => {\n    console.log(error);\n  }\n  const handleScanWebCam = (result) => {\n    if (result) {\n      scanForPass1(result);\n      }else{\n        setStatus_live(\"Not a QR Code\");\n      }\n   }\n  function scanForPass1(qrCode) {\n    debugger\n    fetch(\n      'http://localhost:5000',{\n       headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      method: \"POST\",\n      body: JSON.stringify({result:qrCode})\n    }\n    ).then(\n      response =>{\n        response.json().then(json =>{\n          console.log(json)\n          if(json.result){\n            setStatus_live(\"this belongs to the blockchain\");\n          }else{\n            setStatus_live(\"this does not belong to the blockchain\");\n          }\n        });\n      }\n    )};\n    function scanForPass(qrCode) {\n      debugger\n      fetch(\n        'http://localhost:5000',{\n         headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        method: \"POST\",\n        body: JSON.stringify({result:qrCode})\n      }\n      ).then(\n        response =>{\n          response.json().then(json =>{\n            console.log(json)\n            if(json.result){\n              setStatus(\"this belongs to the blockchain\");\n            }else{\n              setStatus(\"this does not belong to the blockchain\");\n            }\n          });\n        }\n      )}; \n\n  return (\n    <Container className={classes.conatiner}>\n      <img src=\"covidchain.png\" className={classes.img} alt=\"logo\"></img>\n          <Card className={classes.card}>\n              <h1 className={classes.title}>Fake Vaccination Pass Detection using BlockChain Technology</h1>\n              <CardContent>\n                  <Grid container spacing={2}>\n                      <Grid item xl={4} lg={4} md={6} sm={12} xs={12}>\n                          <TextField className={classes.TextField} label=\"Pass Code\" onChange={(e) => setText(e.target.value)}/>\n                          <Button className={classes.btn} variant=\"contained\" \n                            color=\"primary\" onClick={() => generateQrCode()}>Generate QR</Button>\n                            <br/>\n                            <br/>\n                            <br/>\n                            {imageUrl ? (\n                              <a href={imageUrl} download>\n                                  <img src={imageUrl} alt=\"img\"/>\n                              </a>) : null}\n                      </Grid>\n                      <Grid item xl={4} lg={4} md={6} sm={12} xs={12}>\n                        <Button className={classes.btn} variant=\"contained\" color=\"secondary\" onClick={onScanFile}>Scan Qr Image</Button>\n                        <QrReader\n                          ref={qrRef}\n                          delay={300}\n                          style={{width: '100%'}}\n                          onError={handleErrorFile}\n                          onScan={handleScanFile}\n                          legacyMode\n                        />\n                        <h3>Scanned Image's Code: {scanResultFile}</h3><br></br>\n                        <h3> {status}</h3>\n                      </Grid>\n                      <Grid item xl={4} lg={4} md={6} sm={12} xs={12}>\n                         <h3>Qr Code Scan by Web Cam</h3>\n                         <QrReader\n                         delay={300}\n                         style={{width: '100%'}}\n                         onError={handleErrorWebCam}\n                         onScan={handleScanWebCam}\n                         />\n                         <h3>Scanned By WebCam Code: {scanResultWebCam}</h3><br></br>\n                         <h3> {status_live}</h3>\n                      </Grid>\n                  </Grid>\n              </CardContent>\n          </Card>\n          <div className={classes.made}><h3>Made By &nbsp; <i>Taha</i> &nbsp; & &nbsp; <i>Badr-Eddine</i></h3></div> \n    </Container>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n    conatiner: {\n      marginTop: 10,\n      width: '95%',\n      '@media (min-width: 780px)' : {\n        width: '100%',\n      }\n      \n    },\n    title: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems:  'center',\n      textAlign: \"center\",\n      color: '#black',\n      padding: '1.5rem 1rem',\n      textShadow: \"2px 2px 10px #00CEAB\",\n      color: '#002c69', \n      overflow: 'hidden',\n      fontSize: '1.5em',\n      WebkitTextStroke: '0.05rem #000E20',\n      '@media (min-width: 780px)' : {\n        fontWeight: '3000',\n        fontSize: '2.2em',\n      }\n    },  \n    btn : {\n      marginTop: 5,\n      marginBottom: 25,\n      '@media (min-width: 780px)' : {\n        marginTop: 10,\n        marginBottom: 20,\n      }\n    },\n    made : {\n      margin: \"2rem 0rem\",\n      textAlign: \"center\",\n      color: '#FFF7F7',\n      '@media (min-width: 780px)' : {\n        margin: \"3rem 1rem\"\n      }\n    },\n    img : {\n      width: '100%',  \n      display: \"block\", \n      margin: \"auto\",\n      '@media (min-width: 780px)' : {\n        width: '40%'\n      }\n\n    },\n    TextField : {\n      margin: \"1rem 0rem\",\n      '@media (min-width: 780px)' : {\n        margin: \"0rem 1rem\",\n      }\n    },\n    card : {\n      boxShadow: \"rgba(0, 0, 0, 0.5) 0px 30px 60px -15px\",\n      marginBottom: \"5rem\",\n      padding: \"0.5rem 1rem\",\n      '@media (min-width: 780px)' : {\n        padding: \"1rem 2rem\",\n      }\n    },\n    \n\n\n}));\nexport default App;\n","/home/elbatouri/covid-blockchain/covid-chain/src/reportWebVitals.js",[],{"ruleId":"23","replacedBy":"24"},{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","severity":1,"message":"28","line":2,"column":76,"nodeType":"29","messageId":"30","endLine":2,"endColumn":95},{"ruleId":"27","severity":1,"message":"31","line":5,"column":10,"nodeType":"29","messageId":"30","endLine":5,"endColumn":26},{"ruleId":"27","severity":1,"message":"32","line":11,"column":26,"nodeType":"29","messageId":"30","endLine":11,"endColumn":43},{"ruleId":"27","severity":1,"message":"33","line":12,"column":28,"nodeType":"29","messageId":"30","endLine":12,"endColumn":47},{"ruleId":"34","severity":1,"message":"35","line":165,"column":7,"nodeType":"36","messageId":"37","endLine":165,"endColumn":12},"no-native-reassign",["38"],"no-negated-in-lhs",["39"],"no-unused-vars","'responsiveFontSizes' is defined but never used.","Identifier","unusedVar","'withThemeCreator' is defined but never used.","'setScanResultFile' is assigned a value but never used.","'setScanResultWebCam' is assigned a value but never used.","no-dupe-keys","Duplicate key 'color'.","ObjectExpression","unexpected","no-global-assign","no-unsafe-negation"]